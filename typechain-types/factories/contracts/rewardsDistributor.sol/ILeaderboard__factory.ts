/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILeaderboard,
  ILeaderboardInterface,
} from "../../../contracts/rewardsDistributor.sol/ILeaderboard";

const _abi = [
  {
    inputs: [],
    name: "getLeaderboard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
        ],
        internalType: "struct ILeaderboard.NFTScore[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ILeaderboard__factory {
  static readonly abi = _abi;
  static createInterface(): ILeaderboardInterface {
    return new Interface(_abi) as ILeaderboardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ILeaderboard {
    return new Contract(address, _abi, runner) as unknown as ILeaderboard;
  }
}
