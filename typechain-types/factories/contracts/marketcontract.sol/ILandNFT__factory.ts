/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILandNFT,
  ILandNFTInterface,
} from "../../../contracts/marketcontract.sol/ILandNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "food",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wood",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stone",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "brass",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iron",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gold",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.Resources",
        name: "resources",
        type: "tuple",
      },
    ],
    name: "addResources",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILandNFT__factory {
  static readonly abi = _abi;
  static createInterface(): ILandNFTInterface {
    return new Interface(_abi) as ILandNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ILandNFT {
    return new Contract(address, _abi, runner) as unknown as ILandNFT;
  }
}
